version: '3.3'

services:
  nginx:
    build:
      context: .
      dockerfile: Dockerfile-nginx
    volumes:
      - ./ssl:/etc/ssl
      - ./../site/:/var/www
    depends_on:
      - php
    ports:
      - 80:80
      - 443:443

  php:
    build:
      context: .
      dockerfile: Dockerfile-php
    volumes:
      - ./../site/:/var/www
    env_file:
      - .env
    environment:
      MYSQL_HOST: ${MYSQL_HOST}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DB: ${MYSQL_DB}
      MYSQL_CHARSET: ${MYSQL_CHARSET}
      API_LINK: ${API_LINK}
    ports:
      - 9010:9000

  mysql:
    build:
      context: .
      dockerfile: Dockerfile-mysql
    volumes:
      - ./mysql/:/docker-entrypoint-initdb.d
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DB}
    ports:
      - 3309:3306

  adminer:
    build:
      context: .
      dockerfile: Dockerfile-adminer
    ports:
      - 9000:8080

  bot:
    build:
      context: .
      dockerfile: Dockerfile-bot
    env_file:
      - .env
    environment:
      bot_token: ${BOT_TOKEN}
      SERVICE_NAME: ${SERVICE_NAME}
      API_LINK: ${API_LINK}
      SERVER_URI: ${SERVER_URI}
    volumes:
      - ./../bot/:/app/
    ports:
      - "5001:8080"
      - "5002:80"
    restart: always

#  currency-service:
#    build:
#      context: .
#      dockerfile: Dockerfile-currency-service
#    env_file:
#      - .env
#    volumes:
#      - ./../currency-service/:/app/
#    environment:
#      task_start_hour: "7"
#      task_start_minute: "30"
#      bot_token: ${CURRENCY_BOT_TOKEN}
#      telegram_channel: ${TELEGRAM_CHANEL}
#      TZ: "Europe/Moscow"
#    restart: always
#    ports:
#      - "5003:80"
#
#  price-service:
#    build:
#      context: .
#      dockerfile: Dockerfile-price-service
#    env_file:
#      - .env
#    volumes:
#      - ./../price-service/:/app/
#    environment:
#      bot_token: ${PRICE_BOT_TOKEN}
#      telegram_channel: ${TELEGRAM_PRICE_CHANEL}
#    restart: always
#    ports:
#      - "5004:80"
#
#  notification-service:
#    build:
#      context: .
#      dockerfile: Dockerfile-notification-service
#    env_file:
#      - .env
#    volumes:
#      - ./../notification-service/:/app/
#    environment:
#      bot_token: ${BOT_TOKEN}
#      server_uri: ${SERVER_URI}
#      api_link: ${API_LINK}
#    ports:
#      - "5005:80"
#
#  confirm-price-service:
#    build:
#      context: .
#      dockerfile: Dockerfile-confirm-price-service
#    env_file:
#      - .env
#    volumes:
#      - ./../confirm-price-service/:/app/
#    environment:
#      bot_token: ${BOT_TOKEN}
#      api_link: ${API_LINK}
#    restart: always
#    ports:
#      - "5006:80"